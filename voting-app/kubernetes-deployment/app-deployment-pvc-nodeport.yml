apiVersion: v1
kind: Namespace
metadata:
  name: vote
--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: redis
  name: redis
  namespace: vote
spec: 
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector: 
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: vote
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:5.0-alpine3.10
        name: redis
        ports:
        - containerPort: 6379
          name: redis
--- 
apiVersion: v1
kind: Service
metadata: 
  labels: 
    app: db
  name: db
  namespace: vote
spec: 
  type: ClusterIP
  ports: 
  - name: db
    port: 5432
    targetPort: 5432
  selector: 
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: vote
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:9.4
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        ports:
        - containerPort: 5432
          name: db
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: result
  labels:
    app: result
  namespace: vote
spec:
  type: NodePort
  ports:
  - port: 5001
    targetPort: 80
    nodePort: 31001
    name: result-service
  selector:
    app: result
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result
  namespace: vote
  labels:
    app: result
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result
        image: kunchalavikram/result-app:1.0.0
        ports:
        - containerPort: 80
          name: result
---
apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    apps: vote
  namespace: vote
spec:
  type: NodePort
  ports:
  - name: vote
    port: 5000
    targetPort: 80
    nodePort: 31000
  selector:
    app: vote
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote
  labels:
    app: vote
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
      - name: vote
        image: kunchalavikram/vote-app:1.0.0
        ports:
        - containerPort: 80
          name: vote
--- 
apiVersion: apps/v1
kind: Deployment
metadata: 
  labels: 
    app: worker
  name: worker
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template: 
    metadata: 
      labels: 
        app: worker
    spec: 
      containers: 
      - image: kunchalavikram/worker-app:1.0.0
        name: worker
